{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            { "ServerSideEncryptionByDefault": { "SSEAlgorithm": "AES256" } }
          ]
        }
      }
    },
    "HelloLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/test-serverless-provision-dev-hello"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": ["lambda.amazonaws.com"] },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": ["-", ["dev", "test-serverless-provision", "lambda"]]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": ["logs:CreateLogStream"],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-serverless-provision-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": ["logs:PutLogEvents"],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-serverless-provision-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "test-serverless-provision",
              "dev",
              { "Ref": "AWS::Region" },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "HelloLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "ServerlessDeploymentBucket" },
          "S3Key": "serverless/test-serverless-provision/dev/1579431382747-2020-01-19T10:56:22.747Z/test-serverless-provision.zip"
        },
        "FunctionName": "test-serverless-provision-dev-hello",
        "Handler": "handler.hello",
        "MemorySize": 1024,
        "Role": { "Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"] },
        "Runtime": "nodejs10.x",
        "Timeout": 6
      },
      "DependsOn": ["HelloLogGroup", "IamRoleLambdaExecution"]
    },
    "HelloLambdaVersionl4cPym34eH4MtiLPRQWQfUq7wdR3S30wuIG69QX4ACY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": { "Ref": "HelloLambdaFunction" },
        "CodeSha256": "XxBQv27U2MTWLGjfg+t9cLcXbO61uddLuLHBXAd05hw="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-test-serverless-provision",
        "EndpointConfiguration": { "Types": ["EDGE"] }
      }
    },
    "ApiGatewayResourceHello": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] },
        "PathPart": "hello",
        "RestApiId": { "Ref": "ApiGatewayRestApi" }
      }
    },
    "ApiGatewayMethodHelloGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": { "Ref": "ApiGatewayResourceHello" },
        "RestApiId": { "Ref": "ApiGatewayRestApi" },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                { "Ref": "AWS::Region" },
                ":lambda:path/2015-03-31/functions/",
                { "Ref": "HelloLambdaFunctionAliasLive" },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1579431382308": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": { "Ref": "ApiGatewayRestApi" },
        "StageName": "dev"
      },
      "DependsOn": ["ApiGatewayMethodHelloGet"]
    },
    "HelloLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": { "Fn::GetAtt": ["HelloLambdaFunction", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              { "Ref": "AWS::Partition" },
              ":execute-api:",
              { "Ref": "AWS::Region" },
              ":",
              { "Ref": "AWS::AccountId" },
              ":",
              { "Ref": "ApiGatewayRestApi" },
              "/*/*"
            ]
          ]
        }
      }
    },
    "TestserverlessprovisiondevDeploymentApplication": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": { "ComputePlatform": "Lambda" }
    },
    "CodeDeployServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda",
          "arn:aws:iam::aws:policy/AWSLambdaFullAccess"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": ["sts:AssumeRole"],
              "Effect": "Allow",
              "Principal": { "Service": ["codedeploy.amazonaws.com"] }
            }
          ]
        }
      }
    },
    "HelloLambdaFunctionDeploymentGroup": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "TestserverlessprovisiondevDeploymentApplication"
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE",
            "DEPLOYMENT_STOP_ON_ALARM",
            "DEPLOYMENT_STOP_ON_REQUEST"
          ]
        },
        "DeploymentConfigName": {
          "Fn::Sub": [
            "CodeDeployDefault.Lambda${ConfigName}",
            { "ConfigName": "Linear10PercentEvery1Minute" }
          ]
        },
        "DeploymentStyle": {
          "DeploymentType": "BLUE_GREEN",
          "DeploymentOption": "WITH_TRAFFIC_CONTROL"
        },
        "ServiceRoleArn": { "Fn::GetAtt": ["CodeDeployServiceRole", "Arn"] }
      }
    },
    "HelloLambdaFunctionAliasLive": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionVersion": {
          "Fn::GetAtt": [
            "HelloLambdaVersionl4cPym34eH4MtiLPRQWQfUq7wdR3S30wuIG69QX4ACY",
            "Version"
          ]
        },
        "FunctionName": { "Ref": "HelloLambdaFunction" },
        "Name": "Live",
        "ProvisionedConcurrencyConfig": { "ProvisionedConcurrentExecutions": 1 }
      },
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "ApplicationName": {
            "Ref": "TestserverlessprovisiondevDeploymentApplication"
          },
          "DeploymentGroupName": { "Ref": "HelloLambdaFunctionDeploymentGroup" }
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": { "Ref": "ServerlessDeploymentBucket" }
    },
    "HelloLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HelloLambdaVersionl4cPym34eH4MtiLPRQWQfUq7wdR3S30wuIG69QX4ACY"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            { "Ref": "ApiGatewayRestApi" },
            ".execute-api.",
            { "Ref": "AWS::Region" },
            ".",
            { "Ref": "AWS::URLSuffix" },
            "/dev"
          ]
        ]
      }
    }
  }
}
